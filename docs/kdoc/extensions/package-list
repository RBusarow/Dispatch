$dokka.format:gfm
$dokka.linkExtension:md
$dokka.location:dispatch.extensions.flow$any(kotlinx.coroutines.flow.Flow((dispatch.extensions.flow.any.T)), kotlin.Function1((dispatch.extensions.flow.any.T, kotlin.Boolean)))dispatch.extensions.flow/kotlinx.coroutines.flow.-flow/any.md
$dokka.location:dispatch.extensions.flow$cache(kotlinx.coroutines.flow.Flow((dispatch.extensions.flow.cache.T)), kotlin.Int)dispatch.extensions.flow/kotlinx.coroutines.flow.-flow/cache.md
$dokka.location:dispatch.extensions.flow$collectUntil(kotlinx.coroutines.flow.Flow((dispatch.extensions.flow.collectUntil.T)), kotlin.coroutines.SuspendFunction1((dispatch.extensions.flow.collectUntil.T, kotlin.Boolean)))dispatch.extensions.flow/kotlinx.coroutines.flow.-flow/collect-until.md
$dokka.location:dispatch.extensions.flow$firstOrNull(kotlinx.coroutines.flow.Flow((dispatch.extensions.flow.firstOrNull.T)))dispatch.extensions.flow/kotlinx.coroutines.flow.-flow/first-or-null.md
$dokka.location:dispatch.extensions.flow$onEachLatest(kotlinx.coroutines.flow.Flow((dispatch.extensions.flow.onEachLatest.T)), kotlin.coroutines.SuspendFunction1((dispatch.extensions.flow.onEachLatest.T, kotlin.Unit)))dispatch.extensions.flow/kotlinx.coroutines.flow.-flow/on-each-latest.md
$dokka.location:dispatch.extensions.flow$shareIn(kotlinx.coroutines.flow.Flow((dispatch.extensions.flow.shareIn.T)), kotlinx.coroutines.CoroutineScope, kotlin.Int)dispatch.extensions.flow/kotlinx.coroutines.flow.-flow/share-in.md
dispatch.extensions.flow
