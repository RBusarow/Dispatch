[{"name":"abstract class BaseTest","description":"dispatch.internal.test.BaseTest","location":"dispatch-internal-test/dispatch.internal.test/-base-test/index.html","searchKeys":["BaseTest","abstract class BaseTest","dispatch.internal.test.BaseTest"]},{"name":"abstract fun onCreate()","description":"dispatch.internal.test.Application.onCreate","location":"dispatch-internal-test/dispatch.internal.test/-application/on-create.html","searchKeys":["onCreate","abstract fun onCreate()","dispatch.internal.test.Application.onCreate"]},{"name":"annotation class Fails(expected: KClass<*>)","description":"dispatch.internal.test.Fails","location":"dispatch-internal-test/dispatch.internal.test/-fails/index.html","searchKeys":["Fails","annotation class Fails(expected: KClass<*>)","dispatch.internal.test.Fails"]},{"name":"annotation class TrimAssertion","description":"dispatch.internal.test.TrimAssertion","location":"dispatch-internal-test/dispatch.internal.test/-trim-assertion/index.html","searchKeys":["TrimAssertion","annotation class TrimAssertion","dispatch.internal.test.TrimAssertion"]},{"name":"class AtomicCounterExtension : AfterEachCallback","description":"dispatch.internal.test.AtomicCounterExtension","location":"dispatch-internal-test/dispatch.internal.test/-atomic-counter-extension/index.html","searchKeys":["AtomicCounterExtension","class AtomicCounterExtension : AfterEachCallback","dispatch.internal.test.AtomicCounterExtension"]},{"name":"class ExpectedFailureRule : TestRule","description":"dispatch.internal.test.ExpectedFailureRule","location":"dispatch-internal-test/dispatch.internal.test/-expected-failure-rule/index.html","searchKeys":["ExpectedFailureRule","class ExpectedFailureRule : TestRule","dispatch.internal.test.ExpectedFailureRule"]},{"name":"fun Any?.shouldPrint(vararg expected: String)","description":"dispatch.internal.test.shouldPrint","location":"dispatch-internal-test/dispatch.internal.test/should-print.html","searchKeys":["shouldPrint","fun Any?.shouldPrint(vararg expected: String)","dispatch.internal.test.shouldPrint"]},{"name":"fun AtomicCounterExtension()","description":"dispatch.internal.test.AtomicCounterExtension.AtomicCounterExtension","location":"dispatch-internal-test/dispatch.internal.test/-atomic-counter-extension/-atomic-counter-extension.html","searchKeys":["AtomicCounterExtension","fun AtomicCounterExtension()","dispatch.internal.test.AtomicCounterExtension.AtomicCounterExtension"]},{"name":"fun BaseTest()","description":"dispatch.internal.test.BaseTest.BaseTest","location":"dispatch-internal-test/dispatch.internal.test/-base-test/-base-test.html","searchKeys":["BaseTest","fun BaseTest()","dispatch.internal.test.BaseTest.BaseTest"]},{"name":"fun ExpectedFailureRule()","description":"dispatch.internal.test.ExpectedFailureRule.ExpectedFailureRule","location":"dispatch-internal-test/dispatch.internal.test/-expected-failure-rule/-expected-failure-rule.html","searchKeys":["ExpectedFailureRule","fun ExpectedFailureRule()","dispatch.internal.test.ExpectedFailureRule.ExpectedFailureRule"]},{"name":"fun Fails(expected: KClass<*>)","description":"dispatch.internal.test.Fails.Fails","location":"dispatch-internal-test/dispatch.internal.test/-fails/-fails.html","searchKeys":["Fails","fun Fails(expected: KClass<*>)","dispatch.internal.test.Fails.Fails"]},{"name":"fun MyCustomElement(): CoroutineContext","description":"dispatch.internal.test.MyCustomElement","location":"dispatch-internal-test/dispatch.internal.test/-my-custom-element.html","searchKeys":["MyCustomElement","fun MyCustomElement(): CoroutineContext","dispatch.internal.test.MyCustomElement"]},{"name":"fun TrimAssertion()","description":"dispatch.internal.test.TrimAssertion.TrimAssertion","location":"dispatch-internal-test/dispatch.internal.test/-trim-assertion/-trim-assertion.html","searchKeys":["TrimAssertion","fun TrimAssertion()","dispatch.internal.test.TrimAssertion.TrimAssertion"]},{"name":"fun captureOutput(block: (out: PrintStream) -> Unit): List<String>","description":"dispatch.internal.test.captureOutput","location":"dispatch-internal-test/dispatch.internal.test/capture-output.html","searchKeys":["captureOutput","fun captureOutput(block: (out: PrintStream) -> Unit): List<String>","dispatch.internal.test.captureOutput"]},{"name":"fun dispatcherName(): String","description":"dispatch.internal.test.dispatcherName","location":"dispatch-internal-test/dispatch.internal.test/dispatcher-name.html","searchKeys":["dispatcherName","fun dispatcherName(): String","dispatch.internal.test.dispatcherName"]},{"name":"fun expect(expectedIndex: Int)","description":"dispatch.internal.test.AtomicCounterExtension.expect","location":"dispatch-internal-test/dispatch.internal.test/-atomic-counter-extension/expect.html","searchKeys":["expect","fun expect(expectedIndex: Int)","dispatch.internal.test.AtomicCounterExtension.expect"]},{"name":"fun expect(expectedIndex: Int)","description":"dispatch.internal.test.BaseTest.expect","location":"dispatch-internal-test/dispatch.internal.test/-base-test/expect.html","searchKeys":["expect","fun expect(expectedIndex: Int)","dispatch.internal.test.BaseTest.expect"]},{"name":"fun finish(expectedIndex: Int)","description":"dispatch.internal.test.AtomicCounterExtension.finish","location":"dispatch-internal-test/dispatch.internal.test/-atomic-counter-extension/finish.html","searchKeys":["finish","fun finish(expectedIndex: Int)","dispatch.internal.test.AtomicCounterExtension.finish"]},{"name":"fun finish(expectedIndex: Int)","description":"dispatch.internal.test.BaseTest.finish","location":"dispatch-internal-test/dispatch.internal.test/-base-test/finish.html","searchKeys":["finish","fun finish(expectedIndex: Int)","dispatch.internal.test.BaseTest.finish"]},{"name":"fun resetIndex()","description":"dispatch.internal.test.AtomicCounterExtension.resetIndex","location":"dispatch-internal-test/dispatch.internal.test/-atomic-counter-extension/reset-index.html","searchKeys":["resetIndex","fun resetIndex()","dispatch.internal.test.AtomicCounterExtension.resetIndex"]},{"name":"fun resetIndex()","description":"dispatch.internal.test.BaseTest.resetIndex","location":"dispatch-internal-test/dispatch.internal.test/-base-test/reset-index.html","searchKeys":["resetIndex","fun resetIndex()","dispatch.internal.test.BaseTest.resetIndex"]},{"name":"infix fun Any?.shouldPrint(expected: String)","description":"dispatch.internal.test.shouldPrint","location":"dispatch-internal-test/dispatch.internal.test/should-print.html","searchKeys":["shouldPrint","infix fun Any?.shouldPrint(expected: String)","dispatch.internal.test.shouldPrint"]},{"name":"infix fun CoroutineContext.shouldNotEqualFolded(other: CoroutineContext)","description":"dispatch.internal.test.shouldNotEqualFolded","location":"dispatch-internal-test/dispatch.internal.test/should-not-equal-folded.html","searchKeys":["shouldNotEqualFolded","infix fun CoroutineContext.shouldNotEqualFolded(other: CoroutineContext)","dispatch.internal.test.shouldNotEqualFolded"]},{"name":"infix inline fun CoroutineContext.shouldEqualFolded(other: CoroutineContext)","description":"dispatch.internal.test.shouldEqualFolded","location":"dispatch-internal-test/dispatch.internal.test/should-equal-folded.html","searchKeys":["shouldEqualFolded","infix inline fun CoroutineContext.shouldEqualFolded(other: CoroutineContext)","dispatch.internal.test.shouldEqualFolded"]},{"name":"infix inline fun Job?.shouldBeOrChildOf(other: Job?)","description":"dispatch.internal.test.shouldBeOrChildOf","location":"dispatch-internal-test/dispatch.internal.test/should-be-or-child-of.html","searchKeys":["shouldBeOrChildOf","infix inline fun Job?.shouldBeOrChildOf(other: Job?)","dispatch.internal.test.shouldBeOrChildOf"]},{"name":"inline fun <T : Any, R : Any> T.getPrivateFieldByName(name: String): R","description":"dispatch.internal.test.getPrivateFieldByName","location":"dispatch-internal-test/dispatch.internal.test/get-private-field-by-name.html","searchKeys":["getPrivateFieldByName","inline fun <T : Any, R : Any> T.getPrivateFieldByName(name: String): R","dispatch.internal.test.getPrivateFieldByName"]},{"name":"inline fun <T : Any, R : Any> T.getPrivateObjectFieldByName(name: String): R","description":"dispatch.internal.test.getPrivateObjectFieldByName","location":"dispatch-internal-test/dispatch.internal.test/get-private-object-field-by-name.html","searchKeys":["getPrivateObjectFieldByName","inline fun <T : Any, R : Any> T.getPrivateObjectFieldByName(name: String): R","dispatch.internal.test.getPrivateObjectFieldByName"]},{"name":"inline fun <T> trimAssertion(testAction: () -> T): T","description":"dispatch.internal.test.trimAssertion","location":"dispatch-internal-test/dispatch.internal.test/trim-assertion.html","searchKeys":["trimAssertion","inline fun <T> trimAssertion(testAction: () -> T): T","dispatch.internal.test.trimAssertion"]},{"name":"inline fun Job.shouldBeSupervisorJob()","description":"dispatch.internal.test.shouldBeSupervisorJob","location":"dispatch-internal-test/dispatch.internal.test/should-be-supervisor-job.html","searchKeys":["shouldBeSupervisorJob","inline fun Job.shouldBeSupervisorJob()","dispatch.internal.test.shouldBeSupervisorJob"]},{"name":"interface Application","description":"dispatch.internal.test.Application","location":"dispatch-internal-test/dispatch.internal.test/-application/index.html","searchKeys":["Application","interface Application","dispatch.internal.test.Application"]},{"name":"open override fun afterEach(context: ExtensionContext?)","description":"dispatch.internal.test.AtomicCounterExtension.afterEach","location":"dispatch-internal-test/dispatch.internal.test/-atomic-counter-extension/after-each.html","searchKeys":["afterEach","open override fun afterEach(context: ExtensionContext?)","dispatch.internal.test.AtomicCounterExtension.afterEach"]},{"name":"open override fun apply(base: Statement, description: Description): Statement","description":"dispatch.internal.test.ExpectedFailureRule.apply","location":"dispatch-internal-test/dispatch.internal.test/-expected-failure-rule/apply.html","searchKeys":["apply","open override fun apply(base: Statement, description: Description): Statement","dispatch.internal.test.ExpectedFailureRule.apply"]},{"name":"val blocking: ExecutorCoroutineDispatcher","description":"dispatch.internal.test.blocking","location":"dispatch-internal-test/dispatch.internal.test/blocking.html","searchKeys":["blocking","val blocking: ExecutorCoroutineDispatcher","dispatch.internal.test.blocking"]},{"name":"val expected: KClass<*>","description":"dispatch.internal.test.Fails.expected","location":"dispatch-internal-test/dispatch.internal.test/-fails/expected.html","searchKeys":["expected","val expected: KClass<*>","dispatch.internal.test.Fails.expected"]},{"name":"val someDispatcherProvider: CoroutineContext","description":"dispatch.internal.test.someDispatcherProvider","location":"dispatch-internal-test/dispatch.internal.test/some-dispatcher-provider.html","searchKeys":["someDispatcherProvider","val someDispatcherProvider: CoroutineContext","dispatch.internal.test.someDispatcherProvider"]},{"name":"abstract val observer: LifecycleObserver","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent.observer","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/observer.html","searchKeys":["observer","abstract val observer: LifecycleObserver","dispatch.internal.test.android.FakeLifecycle.ObserverEvent.observer"]},{"name":"class FakeLifecycle(lifecycleOwner: FakeLifecycleOwner) : Lifecycle","description":"dispatch.internal.test.android.FakeLifecycle","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/index.html","searchKeys":["FakeLifecycle","class FakeLifecycle(lifecycleOwner: FakeLifecycleOwner) : Lifecycle","dispatch.internal.test.android.FakeLifecycle"]},{"name":"class InstantTaskExecutorExtension : BeforeAllCallback","description":"dispatch.internal.test.android.InstantTaskExecutorExtension","location":"dispatch-internal-test-android/dispatch.internal.test.android/-instant-task-executor-extension/index.html","searchKeys":["InstantTaskExecutorExtension","class InstantTaskExecutorExtension : BeforeAllCallback","dispatch.internal.test.android.InstantTaskExecutorExtension"]},{"name":"data class Add(observer: LifecycleObserver) : FakeLifecycle.ObserverEvent","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Add","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/-add/index.html","searchKeys":["Add","data class Add(observer: LifecycleObserver) : FakeLifecycle.ObserverEvent","dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Add"]},{"name":"data class Remove(observer: LifecycleObserver) : FakeLifecycle.ObserverEvent","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Remove","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/-remove/index.html","searchKeys":["Remove","data class Remove(observer: LifecycleObserver) : FakeLifecycle.ObserverEvent","dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Remove"]},{"name":"fun Add(observer: LifecycleObserver)","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Add.Add","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/-add/-add.html","searchKeys":["Add","fun Add(observer: LifecycleObserver)","dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Add.Add"]},{"name":"fun FakeLifecycle(lifecycleOwner: FakeLifecycleOwner)","description":"dispatch.internal.test.android.FakeLifecycle.FakeLifecycle","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-fake-lifecycle.html","searchKeys":["FakeLifecycle","fun FakeLifecycle(lifecycleOwner: FakeLifecycleOwner)","dispatch.internal.test.android.FakeLifecycle.FakeLifecycle"]},{"name":"fun FakeLifecycleOwner(initialState: Lifecycle.State = Lifecycle.State.INITIALIZED, mainDispatcher: CoroutineDispatcher = fakeMainDispatcher())","description":"dispatch.internal.test.android.FakeLifecycleOwner.FakeLifecycleOwner","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/-fake-lifecycle-owner.html","searchKeys":["FakeLifecycleOwner","fun FakeLifecycleOwner(initialState: Lifecycle.State = Lifecycle.State.INITIALIZED, mainDispatcher: CoroutineDispatcher = fakeMainDispatcher())","dispatch.internal.test.android.FakeLifecycleOwner.FakeLifecycleOwner"]},{"name":"fun InstantTaskExecutorExtension()","description":"dispatch.internal.test.android.InstantTaskExecutorExtension.InstantTaskExecutorExtension","location":"dispatch-internal-test-android/dispatch.internal.test.android/-instant-task-executor-extension/-instant-task-executor-extension.html","searchKeys":["InstantTaskExecutorExtension","fun InstantTaskExecutorExtension()","dispatch.internal.test.android.InstantTaskExecutorExtension.InstantTaskExecutorExtension"]},{"name":"fun Remove(observer: LifecycleObserver)","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Remove.Remove","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/-remove/-remove.html","searchKeys":["Remove","fun Remove(observer: LifecycleObserver)","dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Remove.Remove"]},{"name":"fun create()","description":"dispatch.internal.test.android.FakeLifecycleOwner.create","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/create.html","searchKeys":["create","fun create()","dispatch.internal.test.android.FakeLifecycleOwner.create"]},{"name":"fun destroy()","description":"dispatch.internal.test.android.FakeLifecycleOwner.destroy","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/destroy.html","searchKeys":["destroy","fun destroy()","dispatch.internal.test.android.FakeLifecycleOwner.destroy"]},{"name":"fun getObserverCount(): Int","description":"dispatch.internal.test.android.FakeLifecycleOwner.getObserverCount","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/get-observer-count.html","searchKeys":["getObserverCount","fun getObserverCount(): Int","dispatch.internal.test.android.FakeLifecycleOwner.getObserverCount"]},{"name":"fun handleLifecycleEvent(event: Lifecycle.Event)","description":"dispatch.internal.test.android.FakeLifecycle.handleLifecycleEvent","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/handle-lifecycle-event.html","searchKeys":["handleLifecycleEvent","fun handleLifecycleEvent(event: Lifecycle.Event)","dispatch.internal.test.android.FakeLifecycle.handleLifecycleEvent"]},{"name":"fun initialize()","description":"dispatch.internal.test.android.FakeLifecycleOwner.initialize","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/initialize.html","searchKeys":["initialize","fun initialize()","dispatch.internal.test.android.FakeLifecycleOwner.initialize"]},{"name":"fun pause()","description":"dispatch.internal.test.android.FakeLifecycleOwner.pause","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/pause.html","searchKeys":["pause","fun pause()","dispatch.internal.test.android.FakeLifecycleOwner.pause"]},{"name":"fun resume()","description":"dispatch.internal.test.android.FakeLifecycleOwner.resume","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/resume.html","searchKeys":["resume","fun resume()","dispatch.internal.test.android.FakeLifecycleOwner.resume"]},{"name":"fun setCurrentState(state: Lifecycle.State)","description":"dispatch.internal.test.android.FakeLifecycle.setCurrentState","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/set-current-state.html","searchKeys":["setCurrentState","fun setCurrentState(state: Lifecycle.State)","dispatch.internal.test.android.FakeLifecycle.setCurrentState"]},{"name":"fun start()","description":"dispatch.internal.test.android.FakeLifecycleOwner.start","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/start.html","searchKeys":["start","fun start()","dispatch.internal.test.android.FakeLifecycleOwner.start"]},{"name":"fun stepDown()","description":"dispatch.internal.test.android.FakeLifecycleOwner.stepDown","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/step-down.html","searchKeys":["stepDown","fun stepDown()","dispatch.internal.test.android.FakeLifecycleOwner.stepDown"]},{"name":"fun stepUp()","description":"dispatch.internal.test.android.FakeLifecycleOwner.stepUp","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/step-up.html","searchKeys":["stepUp","fun stepUp()","dispatch.internal.test.android.FakeLifecycleOwner.stepUp"]},{"name":"fun stop()","description":"dispatch.internal.test.android.FakeLifecycleOwner.stop","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/stop.html","searchKeys":["stop","fun stop()","dispatch.internal.test.android.FakeLifecycleOwner.stop"]},{"name":"interface LiveDataTest","description":"dispatch.internal.test.android.LiveDataTest","location":"dispatch-internal-test-android/dispatch.internal.test.android/-live-data-test/index.html","searchKeys":["LiveDataTest","interface LiveDataTest","dispatch.internal.test.android.LiveDataTest"]},{"name":"open class FakeFragment : Fragment","description":"dispatch.internal.test.android.FakeFragment","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-fragment/index.html","searchKeys":["FakeFragment","open class FakeFragment : Fragment","dispatch.internal.test.android.FakeFragment"]},{"name":"open class FakeLifecycleOwner(initialState: Lifecycle.State, mainDispatcher: CoroutineDispatcher) : LifecycleOwner","description":"dispatch.internal.test.android.FakeLifecycleOwner","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/index.html","searchKeys":["FakeLifecycleOwner","open class FakeLifecycleOwner(initialState: Lifecycle.State, mainDispatcher: CoroutineDispatcher) : LifecycleOwner","dispatch.internal.test.android.FakeLifecycleOwner"]},{"name":"open fun FakeFragment(fragmentLifecycleOwner: LifecycleOwner)","description":"dispatch.internal.test.android.FakeFragment.FakeFragment","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-fragment/-fake-fragment.html","searchKeys":["FakeFragment","open fun FakeFragment(fragmentLifecycleOwner: LifecycleOwner)","dispatch.internal.test.android.FakeFragment.FakeFragment"]},{"name":"open fun getLifecycle(): Lifecycle","description":"dispatch.internal.test.android.FakeFragment.getLifecycle","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-fragment/get-lifecycle.html","searchKeys":["getLifecycle","open fun getLifecycle(): Lifecycle","dispatch.internal.test.android.FakeFragment.getLifecycle"]},{"name":"open fun getViewLifecycleOwner(): LifecycleOwner","description":"dispatch.internal.test.android.FakeFragment.getViewLifecycleOwner","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-fragment/get-view-lifecycle-owner.html","searchKeys":["getViewLifecycleOwner","open fun getViewLifecycleOwner(): LifecycleOwner","dispatch.internal.test.android.FakeFragment.getViewLifecycleOwner"]},{"name":"open fun getViewLifecycleOwnerLiveData(): LiveData<LifecycleOwner>","description":"dispatch.internal.test.android.FakeFragment.getViewLifecycleOwnerLiveData","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-fragment/get-view-lifecycle-owner-live-data.html","searchKeys":["getViewLifecycleOwnerLiveData","open fun getViewLifecycleOwnerLiveData(): LiveData<LifecycleOwner>","dispatch.internal.test.android.FakeFragment.getViewLifecycleOwnerLiveData"]},{"name":"open override fun addObserver(observer: LifecycleObserver)","description":"dispatch.internal.test.android.FakeLifecycle.addObserver","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/add-observer.html","searchKeys":["addObserver","open override fun addObserver(observer: LifecycleObserver)","dispatch.internal.test.android.FakeLifecycle.addObserver"]},{"name":"open override fun beforeAll(context: ExtensionContext?)","description":"dispatch.internal.test.android.InstantTaskExecutorExtension.beforeAll","location":"dispatch-internal-test-android/dispatch.internal.test.android/-instant-task-executor-extension/before-all.html","searchKeys":["beforeAll","open override fun beforeAll(context: ExtensionContext?)","dispatch.internal.test.android.InstantTaskExecutorExtension.beforeAll"]},{"name":"open override fun getCurrentState(): Lifecycle.State","description":"dispatch.internal.test.android.FakeLifecycle.getCurrentState","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/get-current-state.html","searchKeys":["getCurrentState","open override fun getCurrentState(): Lifecycle.State","dispatch.internal.test.android.FakeLifecycle.getCurrentState"]},{"name":"open override fun getLifecycle(): FakeLifecycle","description":"dispatch.internal.test.android.FakeLifecycleOwner.getLifecycle","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/get-lifecycle.html","searchKeys":["getLifecycle","open override fun getLifecycle(): FakeLifecycle","dispatch.internal.test.android.FakeLifecycleOwner.getLifecycle"]},{"name":"open override fun removeObserver(observer: LifecycleObserver)","description":"dispatch.internal.test.android.FakeLifecycle.removeObserver","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/remove-observer.html","searchKeys":["removeObserver","open override fun removeObserver(observer: LifecycleObserver)","dispatch.internal.test.android.FakeLifecycle.removeObserver"]},{"name":"open override val observer: LifecycleObserver","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Add.observer","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/-add/observer.html","searchKeys":["observer","open override val observer: LifecycleObserver","dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Add.observer"]},{"name":"open override val observer: LifecycleObserver","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Remove.observer","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/-remove/observer.html","searchKeys":["observer","open override val observer: LifecycleObserver","dispatch.internal.test.android.FakeLifecycle.ObserverEvent.Remove.observer"]},{"name":"private open var fakeViewLifecycleOwner: LifecycleOwner","description":"dispatch.internal.test.android.FakeFragment.fakeViewLifecycleOwner","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-fragment/fake-view-lifecycle-owner.html","searchKeys":["fakeViewLifecycleOwner","private open var fakeViewLifecycleOwner: LifecycleOwner","dispatch.internal.test.android.FakeFragment.fakeViewLifecycleOwner"]},{"name":"sealed class ObserverEvent","description":"dispatch.internal.test.android.FakeLifecycle.ObserverEvent","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/-observer-event/index.html","searchKeys":["ObserverEvent","sealed class ObserverEvent","dispatch.internal.test.android.FakeLifecycle.ObserverEvent"]},{"name":"val delegate: LifecycleRegistry","description":"dispatch.internal.test.android.FakeLifecycle.delegate","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/delegate.html","searchKeys":["delegate","val delegate: LifecycleRegistry","dispatch.internal.test.android.FakeLifecycle.delegate"]},{"name":"val fakeLifecycle: FakeLifecycle","description":"dispatch.internal.test.android.FakeLifecycleOwner.fakeLifecycle","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle-owner/fake-lifecycle.html","searchKeys":["fakeLifecycle","val fakeLifecycle: FakeLifecycle","dispatch.internal.test.android.FakeLifecycleOwner.fakeLifecycle"]},{"name":"val observerCount: Int","description":"dispatch.internal.test.android.FakeLifecycle.observerCount","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/observer-count.html","searchKeys":["observerCount","val observerCount: Int","dispatch.internal.test.android.FakeLifecycle.observerCount"]},{"name":"val observerEvents: MutableSharedFlow<FakeLifecycle.ObserverEvent>","description":"dispatch.internal.test.android.FakeLifecycle.observerEvents","location":"dispatch-internal-test-android/dispatch.internal.test.android/-fake-lifecycle/observer-events.html","searchKeys":["observerEvents","val observerEvents: MutableSharedFlow<FakeLifecycle.ObserverEvent>","dispatch.internal.test.android.FakeLifecycle.observerEvents"]},{"name":"annotation class CoroutineTest(scopeFactory: KClass<*>)","description":"dispatch.test.CoroutineTest","location":"dispatch-test-junit5/dispatch.test/-coroutine-test/index.html","searchKeys":["CoroutineTest","annotation class CoroutineTest(scopeFactory: KClass<*>)","dispatch.test.CoroutineTest"]},{"name":"class CoroutineTestExtension(scopeFactory: CoroutineTestExtension.ScopeFactory) : TypeBasedParameterResolver<TestProvidedCoroutineScope> , BeforeEachCallback, AfterEachCallback","description":"dispatch.test.CoroutineTestExtension","location":"dispatch-test-junit5/dispatch.test/-coroutine-test-extension/index.html","searchKeys":["CoroutineTestExtension","class CoroutineTestExtension(scopeFactory: CoroutineTestExtension.ScopeFactory) : TypeBasedParameterResolver<TestProvidedCoroutineScope> , BeforeEachCallback, AfterEachCallback","dispatch.test.CoroutineTestExtension"]},{"name":"fun CoroutineTest(scopeFactory: KClass<*> = CoroutineTestExtension.ScopeFactory::class)","description":"dispatch.test.CoroutineTest.CoroutineTest","location":"dispatch-test-junit5/dispatch.test/-coroutine-test/-coroutine-test.html","searchKeys":["CoroutineTest","fun CoroutineTest(scopeFactory: KClass<*> = CoroutineTestExtension.ScopeFactory::class)","dispatch.test.CoroutineTest.CoroutineTest"]},{"name":"fun CoroutineTestExtension(scopeFactory: CoroutineTestExtension.ScopeFactory = ScopeFactory())","description":"dispatch.test.CoroutineTestExtension.CoroutineTestExtension","location":"dispatch-test-junit5/dispatch.test/-coroutine-test-extension/-coroutine-test-extension.html","searchKeys":["CoroutineTestExtension","fun CoroutineTestExtension(scopeFactory: CoroutineTestExtension.ScopeFactory = ScopeFactory())","dispatch.test.CoroutineTestExtension.CoroutineTestExtension"]},{"name":"fun ScopeFactory()","description":"dispatch.test.CoroutineTestExtension.ScopeFactory.ScopeFactory","location":"dispatch-test-junit5/dispatch.test/-coroutine-test-extension/-scope-factory/-scope-factory.html","searchKeys":["ScopeFactory","fun ScopeFactory()","dispatch.test.CoroutineTestExtension.ScopeFactory.ScopeFactory"]},{"name":"inline fun coroutineTestExtension(crossinline scopeFactory: () -> TestProvidedCoroutineScope = { TestProvidedCoroutineScope() }): CoroutineTestExtension","description":"dispatch.test.coroutineTestExtension","location":"dispatch-test-junit5/dispatch.test/coroutine-test-extension.html","searchKeys":["coroutineTestExtension","inline fun coroutineTestExtension(crossinline scopeFactory: () -> TestProvidedCoroutineScope = { TestProvidedCoroutineScope() }): CoroutineTestExtension","dispatch.test.coroutineTestExtension"]},{"name":"open class ScopeFactory","description":"dispatch.test.CoroutineTestExtension.ScopeFactory","location":"dispatch-test-junit5/dispatch.test/-coroutine-test-extension/-scope-factory/index.html","searchKeys":["ScopeFactory","open class ScopeFactory","dispatch.test.CoroutineTestExtension.ScopeFactory"]},{"name":"open fun create(): TestProvidedCoroutineScope","description":"dispatch.test.CoroutineTestExtension.ScopeFactory.create","location":"dispatch-test-junit5/dispatch.test/-coroutine-test-extension/-scope-factory/create.html","searchKeys":["create","open fun create(): TestProvidedCoroutineScope","dispatch.test.CoroutineTestExtension.ScopeFactory.create"]},{"name":"val scope: TestProvidedCoroutineScope","description":"dispatch.test.CoroutineTestExtension.scope","location":"dispatch-test-junit5/dispatch.test/-coroutine-test-extension/scope.html","searchKeys":["scope","val scope: TestProvidedCoroutineScope","dispatch.test.CoroutineTestExtension.scope"]},{"name":"val scopeFactory: KClass<*>","description":"dispatch.test.CoroutineTest.scopeFactory","location":"dispatch-test-junit5/dispatch.test/-coroutine-test/scope-factory.html","searchKeys":["scopeFactory","val scopeFactory: KClass<*>","dispatch.test.CoroutineTest.scopeFactory"]},{"name":"class TestCoroutineRule(factory: () -> TestProvidedCoroutineScope) : TestWatcher, TestProvidedCoroutineScope","description":"dispatch.test.TestCoroutineRule","location":"dispatch-test-junit4/dispatch.test/-test-coroutine-rule/index.html","searchKeys":["TestCoroutineRule","class TestCoroutineRule(factory: () -> TestProvidedCoroutineScope) : TestWatcher, TestProvidedCoroutineScope","dispatch.test.TestCoroutineRule"]},{"name":"fun TestCoroutineRule(factory: () -> TestProvidedCoroutineScope = { TestProvidedCoroutineScope() })","description":"dispatch.test.TestCoroutineRule.TestCoroutineRule","location":"dispatch-test-junit4/dispatch.test/-test-coroutine-rule/-test-coroutine-rule.html","searchKeys":["TestCoroutineRule","fun TestCoroutineRule(factory: () -> TestProvidedCoroutineScope = { TestProvidedCoroutineScope() })","dispatch.test.TestCoroutineRule.TestCoroutineRule"]},{"name":"val dispatcher: TestCoroutineDispatcher","description":"dispatch.test.TestCoroutineRule.dispatcher","location":"dispatch-test-junit4/dispatch.test/-test-coroutine-rule/dispatcher.html","searchKeys":["dispatcher","val dispatcher: TestCoroutineDispatcher","dispatch.test.TestCoroutineRule.dispatcher"]},{"name":"abstract class DispatchViewModel : ViewModel","description":"dispatch.android.viewmodel.DispatchViewModel","location":"dispatch-android-viewmodel/dispatch.android.viewmodel/-dispatch-view-model/index.html","searchKeys":["DispatchViewModel","abstract class DispatchViewModel : ViewModel","dispatch.android.viewmodel.DispatchViewModel"]},{"name":"fun DispatchViewModel()","description":"dispatch.android.viewmodel.DispatchViewModel.DispatchViewModel","location":"dispatch-android-viewmodel/dispatch.android.viewmodel/-dispatch-view-model/-dispatch-view-model.html","searchKeys":["DispatchViewModel","fun DispatchViewModel()","dispatch.android.viewmodel.DispatchViewModel.DispatchViewModel"]},{"name":"fun reset()","description":"dispatch.android.viewmodel.ViewModelScopeFactory.reset","location":"dispatch-android-viewmodel/dispatch.android.viewmodel/-view-model-scope-factory/reset.html","searchKeys":["reset","fun reset()","dispatch.android.viewmodel.ViewModelScopeFactory.reset"]},{"name":"fun set(factory: () -> CoroutineScope)","description":"dispatch.android.viewmodel.ViewModelScopeFactory.set","location":"dispatch-android-viewmodel/dispatch.android.viewmodel/-view-model-scope-factory/set.html","searchKeys":["set","fun set(factory: () -> CoroutineScope)","dispatch.android.viewmodel.ViewModelScopeFactory.set"]},{"name":"object ViewModelScopeFactory","description":"dispatch.android.viewmodel.ViewModelScopeFactory","location":"dispatch-android-viewmodel/dispatch.android.viewmodel/-view-model-scope-factory/index.html","searchKeys":["ViewModelScopeFactory","object ViewModelScopeFactory","dispatch.android.viewmodel.ViewModelScopeFactory"]},{"name":"val viewModelScope: CoroutineScope","description":"dispatch.android.viewmodel.DispatchViewModel.viewModelScope","location":"dispatch-android-viewmodel/dispatch.android.viewmodel/-dispatch-view-model/view-model-scope.html","searchKeys":["viewModelScope","val viewModelScope: CoroutineScope","dispatch.android.viewmodel.DispatchViewModel.viewModelScope"]},{"name":"fun Fragment.withViewLifecycleScope(block: ViewLifecycleCoroutineScope.() -> Unit): Job","description":"dispatch.android.lifecycle.withViewLifecycleScope","location":"dispatch-android-lifecycle-extensions/dispatch.android.lifecycle/with-view-lifecycle-scope.html","searchKeys":["withViewLifecycleScope","fun Fragment.withViewLifecycleScope(block: ViewLifecycleCoroutineScope.() -> Unit): Job","dispatch.android.lifecycle.withViewLifecycleScope"]},{"name":"fun reset()","description":"dispatch.android.lifecycle.LifecycleScopeFactory.reset","location":"dispatch-android-lifecycle-extensions/dispatch.android.lifecycle/-lifecycle-scope-factory/reset.html","searchKeys":["reset","fun reset()","dispatch.android.lifecycle.LifecycleScopeFactory.reset"]},{"name":"fun set(factory: () -> CoroutineContext)","description":"dispatch.android.lifecycle.LifecycleScopeFactory.set","location":"dispatch-android-lifecycle-extensions/dispatch.android.lifecycle/-lifecycle-scope-factory/set.html","searchKeys":["set","fun set(factory: () -> CoroutineContext)","dispatch.android.lifecycle.LifecycleScopeFactory.set"]},{"name":"fun set(factory: DispatchLifecycleScopeFactory)","description":"dispatch.android.lifecycle.LifecycleScopeFactory.set","location":"dispatch-android-lifecycle-extensions/dispatch.android.lifecycle/-lifecycle-scope-factory/set.html","searchKeys":["set","fun set(factory: DispatchLifecycleScopeFactory)","dispatch.android.lifecycle.LifecycleScopeFactory.set"]},{"name":"object LifecycleScopeFactory","description":"dispatch.android.lifecycle.LifecycleScopeFactory","location":"dispatch-android-lifecycle-extensions/dispatch.android.lifecycle/-lifecycle-scope-factory/index.html","searchKeys":["LifecycleScopeFactory","object LifecycleScopeFactory","dispatch.android.lifecycle.LifecycleScopeFactory"]},{"name":"val LifecycleOwner.dispatchLifecycleScope: DispatchLifecycleScope","description":"dispatch.android.lifecycle.dispatchLifecycleScope","location":"dispatch-android-lifecycle-extensions/dispatch.android.lifecycle/dispatch-lifecycle-scope.html","searchKeys":["dispatchLifecycleScope","val LifecycleOwner.dispatchLifecycleScope: DispatchLifecycleScope","dispatch.android.lifecycle.dispatchLifecycleScope"]},{"name":"val LifecycleOwner.lifecycleScope: DispatchLifecycleScope","description":"dispatch.android.lifecycle.lifecycleScope","location":"dispatch-android-lifecycle-extensions/dispatch.android.lifecycle/lifecycle-scope.html","searchKeys":["lifecycleScope","val LifecycleOwner.lifecycleScope: DispatchLifecycleScope","dispatch.android.lifecycle.lifecycleScope"]},{"name":"abstract val dispatcherProvider: DispatcherProvider","description":"dispatch.test.TestProvidedCoroutineScope.dispatcherProvider","location":"dispatch-test/dispatch.test/-test-provided-coroutine-scope/dispatcher-provider.html","searchKeys":["dispatcherProvider","abstract val dispatcherProvider: DispatcherProvider","dispatch.test.TestProvidedCoroutineScope.dispatcherProvider"]},{"name":"class TestDispatcherProvider(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher) : DispatcherProvider","description":"dispatch.test.TestDispatcherProvider","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/index.html","searchKeys":["TestDispatcherProvider","class TestDispatcherProvider(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher) : DispatcherProvider","dispatch.test.TestDispatcherProvider"]},{"name":"fun DefaultDispatcherProvider.reset()","description":"dispatch.test.reset","location":"dispatch-test/dispatch.test/reset.html","searchKeys":["reset","fun DefaultDispatcherProvider.reset()","dispatch.test.reset"]},{"name":"fun TestBasicDispatcherProvider(): TestDispatcherProvider","description":"dispatch.test.TestBasicDispatcherProvider","location":"dispatch-test/dispatch.test/-test-basic-dispatcher-provider.html","searchKeys":["TestBasicDispatcherProvider","fun TestBasicDispatcherProvider(): TestDispatcherProvider","dispatch.test.TestBasicDispatcherProvider"]},{"name":"fun TestDispatcherProvider(default: CoroutineDispatcher = TestCoroutineDispatcher(), io: CoroutineDispatcher = TestCoroutineDispatcher(), main: CoroutineDispatcher = TestCoroutineDispatcher(), mainImmediate: CoroutineDispatcher = TestCoroutineDispatcher(), unconfined: CoroutineDispatcher = TestCoroutineDispatcher())","description":"dispatch.test.TestDispatcherProvider.TestDispatcherProvider","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/-test-dispatcher-provider.html","searchKeys":["TestDispatcherProvider","fun TestDispatcherProvider(default: CoroutineDispatcher = TestCoroutineDispatcher(), io: CoroutineDispatcher = TestCoroutineDispatcher(), main: CoroutineDispatcher = TestCoroutineDispatcher(), mainImmediate: CoroutineDispatcher = TestCoroutineDispatcher(), unconfined: CoroutineDispatcher = TestCoroutineDispatcher())","dispatch.test.TestDispatcherProvider.TestDispatcherProvider"]},{"name":"fun TestDispatcherProvider(dispatcher: CoroutineDispatcher): TestDispatcherProvider","description":"dispatch.test.TestDispatcherProvider","location":"dispatch-test/dispatch.test/-test-dispatcher-provider.html","searchKeys":["TestDispatcherProvider","fun TestDispatcherProvider(dispatcher: CoroutineDispatcher): TestDispatcherProvider","dispatch.test.TestDispatcherProvider"]},{"name":"fun TestProvidedCoroutineScope(dispatcher: TestCoroutineDispatcher = TestCoroutineDispatcher(), dispatcherProvider: TestDispatcherProvider = TestDispatcherProvider(dispatcher), context: CoroutineContext = EmptyCoroutineContext): TestProvidedCoroutineScope","description":"dispatch.test.TestProvidedCoroutineScope","location":"dispatch-test/dispatch.test/-test-provided-coroutine-scope.html","searchKeys":["TestProvidedCoroutineScope","fun TestProvidedCoroutineScope(dispatcher: TestCoroutineDispatcher = TestCoroutineDispatcher(), dispatcherProvider: TestDispatcherProvider = TestDispatcherProvider(dispatcher), context: CoroutineContext = EmptyCoroutineContext): TestProvidedCoroutineScope","dispatch.test.TestProvidedCoroutineScope"]},{"name":"fun TestProvidedCoroutineScope.testProvided(testBody: suspend TestProvidedCoroutineScope.() -> Unit)","description":"dispatch.test.testProvided","location":"dispatch-test/dispatch.test/test-provided.html","searchKeys":["testProvided","fun TestProvidedCoroutineScope.testProvided(testBody: suspend TestProvidedCoroutineScope.() -> Unit)","dispatch.test.testProvided"]},{"name":"fun runBlockingProvided(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> Unit)","description":"dispatch.test.runBlockingProvided","location":"dispatch-test/dispatch.test/run-blocking-provided.html","searchKeys":["runBlockingProvided","fun runBlockingProvided(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> Unit)","dispatch.test.runBlockingProvided"]},{"name":"fun testProvided(context: CoroutineContext = EmptyCoroutineContext, testBody: suspend TestProvidedCoroutineScope.() -> Unit)","description":"dispatch.test.testProvided","location":"dispatch-test/dispatch.test/test-provided.html","searchKeys":["testProvided","fun testProvided(context: CoroutineContext = EmptyCoroutineContext, testBody: suspend TestProvidedCoroutineScope.() -> Unit)","dispatch.test.testProvided"]},{"name":"interface TestProvidedCoroutineScope : TestCoroutineScope, DefaultCoroutineScope, IOCoroutineScope, MainCoroutineScope, MainImmediateCoroutineScope, UnconfinedCoroutineScope","description":"dispatch.test.TestProvidedCoroutineScope","location":"dispatch-test/dispatch.test/-test-provided-coroutine-scope/index.html","searchKeys":["TestProvidedCoroutineScope","interface TestProvidedCoroutineScope : TestCoroutineScope, DefaultCoroutineScope, IOCoroutineScope, MainCoroutineScope, MainImmediateCoroutineScope, UnconfinedCoroutineScope","dispatch.test.TestProvidedCoroutineScope"]},{"name":"open override fun copy(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher): TestDispatcherProvider","description":"dispatch.test.TestDispatcherProvider.copy","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/copy.html","searchKeys":["copy","open override fun copy(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher): TestDispatcherProvider","dispatch.test.TestDispatcherProvider.copy"]},{"name":"open override val default: CoroutineDispatcher","description":"dispatch.test.TestDispatcherProvider.default","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/default.html","searchKeys":["default","open override val default: CoroutineDispatcher","dispatch.test.TestDispatcherProvider.default"]},{"name":"open override val io: CoroutineDispatcher","description":"dispatch.test.TestDispatcherProvider.io","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/io.html","searchKeys":["io","open override val io: CoroutineDispatcher","dispatch.test.TestDispatcherProvider.io"]},{"name":"open override val main: CoroutineDispatcher","description":"dispatch.test.TestDispatcherProvider.main","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/main.html","searchKeys":["main","open override val main: CoroutineDispatcher","dispatch.test.TestDispatcherProvider.main"]},{"name":"open override val mainImmediate: CoroutineDispatcher","description":"dispatch.test.TestDispatcherProvider.mainImmediate","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/main-immediate.html","searchKeys":["mainImmediate","open override val mainImmediate: CoroutineDispatcher","dispatch.test.TestDispatcherProvider.mainImmediate"]},{"name":"open override val unconfined: CoroutineDispatcher","description":"dispatch.test.TestDispatcherProvider.unconfined","location":"dispatch-test/dispatch.test/-test-dispatcher-provider/unconfined.html","searchKeys":["unconfined","open override val unconfined: CoroutineDispatcher","dispatch.test.TestDispatcherProvider.unconfined"]},{"name":"CANCEL()","description":"dispatch.android.lifecycle.DispatchLifecycleScope.MinimumStatePolicy.CANCEL","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/-minimum-state-policy/-c-a-n-c-e-l/index.html","searchKeys":["CANCEL","CANCEL()","dispatch.android.lifecycle.DispatchLifecycleScope.MinimumStatePolicy.CANCEL"]},{"name":"RESTART_EVERY()","description":"dispatch.android.lifecycle.DispatchLifecycleScope.MinimumStatePolicy.RESTART_EVERY","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/-minimum-state-policy/-r-e-s-t-a-r-t_-e-v-e-r-y/index.html","searchKeys":["RESTART_EVERY","RESTART_EVERY()","dispatch.android.lifecycle.DispatchLifecycleScope.MinimumStatePolicy.RESTART_EVERY"]},{"name":"class DispatchLifecycleScopeFactory(coroutineContextFactory: () -> CoroutineContext)","description":"dispatch.android.lifecycle.DispatchLifecycleScopeFactory","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope-factory/index.html","searchKeys":["DispatchLifecycleScopeFactory","class DispatchLifecycleScopeFactory(coroutineContextFactory: () -> CoroutineContext)","dispatch.android.lifecycle.DispatchLifecycleScopeFactory"]},{"name":"class ViewLifecycleCoroutineScope : DispatchLifecycleScope","description":"dispatch.android.lifecycle.ViewLifecycleCoroutineScope","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-view-lifecycle-coroutine-scope/index.html","searchKeys":["ViewLifecycleCoroutineScope","class ViewLifecycleCoroutineScope : DispatchLifecycleScope","dispatch.android.lifecycle.ViewLifecycleCoroutineScope"]},{"name":"enum MinimumStatePolicy : Enum<DispatchLifecycleScope.MinimumStatePolicy> ","description":"dispatch.android.lifecycle.DispatchLifecycleScope.MinimumStatePolicy","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/-minimum-state-policy/index.html","searchKeys":["MinimumStatePolicy","enum MinimumStatePolicy : Enum<DispatchLifecycleScope.MinimumStatePolicy> ","dispatch.android.lifecycle.DispatchLifecycleScope.MinimumStatePolicy"]},{"name":"fun <T> Flow<T>.launchOnCreate(): Job","description":"dispatch.android.lifecycle.ViewLifecycleCoroutineScope.launchOnCreate","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-view-lifecycle-coroutine-scope/launch-on-create.html","searchKeys":["launchOnCreate","fun <T> Flow<T>.launchOnCreate(): Job","dispatch.android.lifecycle.ViewLifecycleCoroutineScope.launchOnCreate"]},{"name":"fun <T> Flow<T>.launchOnResume(): Job","description":"dispatch.android.lifecycle.ViewLifecycleCoroutineScope.launchOnResume","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-view-lifecycle-coroutine-scope/launch-on-resume.html","searchKeys":["launchOnResume","fun <T> Flow<T>.launchOnResume(): Job","dispatch.android.lifecycle.ViewLifecycleCoroutineScope.launchOnResume"]},{"name":"fun <T> Flow<T>.launchOnStart(): Job","description":"dispatch.android.lifecycle.ViewLifecycleCoroutineScope.launchOnStart","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-view-lifecycle-coroutine-scope/launch-on-start.html","searchKeys":["launchOnStart","fun <T> Flow<T>.launchOnStart(): Job","dispatch.android.lifecycle.ViewLifecycleCoroutineScope.launchOnStart"]},{"name":"fun CoroutineScope.withViewLifecycle(fragment: Fragment, block: ViewLifecycleCoroutineScope.() -> Unit): Job","description":"dispatch.android.lifecycle.withViewLifecycle","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/with-view-lifecycle.html","searchKeys":["withViewLifecycle","fun CoroutineScope.withViewLifecycle(fragment: Fragment, block: ViewLifecycleCoroutineScope.() -> Unit): Job","dispatch.android.lifecycle.withViewLifecycle"]},{"name":"fun DispatchLifecycleScope(lifecycle: Lifecycle, coroutineContext: CoroutineContext = MainImmediateContext())","description":"dispatch.android.lifecycle.DispatchLifecycleScope.DispatchLifecycleScope","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/-dispatch-lifecycle-scope.html","searchKeys":["DispatchLifecycleScope","fun DispatchLifecycleScope(lifecycle: Lifecycle, coroutineContext: CoroutineContext = MainImmediateContext())","dispatch.android.lifecycle.DispatchLifecycleScope.DispatchLifecycleScope"]},{"name":"fun DispatchLifecycleScopeFactory(coroutineContextFactory: () -> CoroutineContext)","description":"dispatch.android.lifecycle.DispatchLifecycleScopeFactory.DispatchLifecycleScopeFactory","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope-factory/-dispatch-lifecycle-scope-factory.html","searchKeys":["DispatchLifecycleScopeFactory","fun DispatchLifecycleScopeFactory(coroutineContextFactory: () -> CoroutineContext)","dispatch.android.lifecycle.DispatchLifecycleScopeFactory.DispatchLifecycleScopeFactory"]},{"name":"fun MainImmediateContext(): CoroutineContext","description":"dispatch.android.lifecycle.MainImmediateContext","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-main-immediate-context.html","searchKeys":["MainImmediateContext","fun MainImmediateContext(): CoroutineContext","dispatch.android.lifecycle.MainImmediateContext"]},{"name":"fun create(lifecycle: Lifecycle): DispatchLifecycleScope","description":"dispatch.android.lifecycle.DispatchLifecycleScopeFactory.create","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope-factory/create.html","searchKeys":["create","fun create(lifecycle: Lifecycle): DispatchLifecycleScope","dispatch.android.lifecycle.DispatchLifecycleScopeFactory.create"]},{"name":"fun launchOnCreate(context: CoroutineContext = EmptyCoroutineContext, minimumStatePolicy: DispatchLifecycleScope.MinimumStatePolicy = MinimumStatePolicy.RESTART_EVERY, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.android.lifecycle.DispatchLifecycleScope.launchOnCreate","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/launch-on-create.html","searchKeys":["launchOnCreate","fun launchOnCreate(context: CoroutineContext = EmptyCoroutineContext, minimumStatePolicy: DispatchLifecycleScope.MinimumStatePolicy = MinimumStatePolicy.RESTART_EVERY, block: suspend CoroutineScope.() -> Unit): Job","dispatch.android.lifecycle.DispatchLifecycleScope.launchOnCreate"]},{"name":"fun launchOnResume(context: CoroutineContext = EmptyCoroutineContext, minimumStatePolicy: DispatchLifecycleScope.MinimumStatePolicy = MinimumStatePolicy.RESTART_EVERY, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.android.lifecycle.DispatchLifecycleScope.launchOnResume","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/launch-on-resume.html","searchKeys":["launchOnResume","fun launchOnResume(context: CoroutineContext = EmptyCoroutineContext, minimumStatePolicy: DispatchLifecycleScope.MinimumStatePolicy = MinimumStatePolicy.RESTART_EVERY, block: suspend CoroutineScope.() -> Unit): Job","dispatch.android.lifecycle.DispatchLifecycleScope.launchOnResume"]},{"name":"fun launchOnStart(context: CoroutineContext = EmptyCoroutineContext, minimumStatePolicy: DispatchLifecycleScope.MinimumStatePolicy = MinimumStatePolicy.RESTART_EVERY, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.android.lifecycle.DispatchLifecycleScope.launchOnStart","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/launch-on-start.html","searchKeys":["launchOnStart","fun launchOnStart(context: CoroutineContext = EmptyCoroutineContext, minimumStatePolicy: DispatchLifecycleScope.MinimumStatePolicy = MinimumStatePolicy.RESTART_EVERY, block: suspend CoroutineScope.() -> Unit): Job","dispatch.android.lifecycle.DispatchLifecycleScope.launchOnStart"]},{"name":"open class DispatchLifecycleScope(lifecycle: Lifecycle, coroutineContext: CoroutineContext) : MainImmediateCoroutineScope","description":"dispatch.android.lifecycle.DispatchLifecycleScope","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/index.html","searchKeys":["DispatchLifecycleScope","open class DispatchLifecycleScope(lifecycle: Lifecycle, coroutineContext: CoroutineContext) : MainImmediateCoroutineScope","dispatch.android.lifecycle.DispatchLifecycleScope"]},{"name":"suspend fun <T> Lifecycle.onNextCreate(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","description":"dispatch.android.lifecycle.onNextCreate","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/on-next-create.html","searchKeys":["onNextCreate","suspend fun <T> Lifecycle.onNextCreate(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","dispatch.android.lifecycle.onNextCreate"]},{"name":"suspend fun <T> Lifecycle.onNextResume(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","description":"dispatch.android.lifecycle.onNextResume","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/on-next-resume.html","searchKeys":["onNextResume","suspend fun <T> Lifecycle.onNextResume(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","dispatch.android.lifecycle.onNextResume"]},{"name":"suspend fun <T> Lifecycle.onNextStart(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","description":"dispatch.android.lifecycle.onNextStart","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/on-next-start.html","searchKeys":["onNextStart","suspend fun <T> Lifecycle.onNextStart(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","dispatch.android.lifecycle.onNextStart"]},{"name":"suspend fun <T> LifecycleOwner.onNextCreate(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","description":"dispatch.android.lifecycle.onNextCreate","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/on-next-create.html","searchKeys":["onNextCreate","suspend fun <T> LifecycleOwner.onNextCreate(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","dispatch.android.lifecycle.onNextCreate"]},{"name":"suspend fun <T> LifecycleOwner.onNextResume(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","description":"dispatch.android.lifecycle.onNextResume","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/on-next-resume.html","searchKeys":["onNextResume","suspend fun <T> LifecycleOwner.onNextResume(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","dispatch.android.lifecycle.onNextResume"]},{"name":"suspend fun <T> LifecycleOwner.onNextStart(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","description":"dispatch.android.lifecycle.onNextStart","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/on-next-start.html","searchKeys":["onNextStart","suspend fun <T> LifecycleOwner.onNextStart(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T?","dispatch.android.lifecycle.onNextStart"]},{"name":"val lifecycle: Lifecycle","description":"dispatch.android.lifecycle.DispatchLifecycleScope.lifecycle","location":"dispatch-android-lifecycle/dispatch.android.lifecycle/-dispatch-lifecycle-scope/lifecycle.html","searchKeys":["lifecycle","val lifecycle: Lifecycle","dispatch.android.lifecycle.DispatchLifecycleScope.lifecycle"]},{"name":"class AndroidXLifecycleScope(config: Config) : Rule","description":"dispatch.detekt.rules.AndroidXLifecycleScope","location":"dispatch-detekt/dispatch.detekt.rules/-android-x-lifecycle-scope/index.html","searchKeys":["AndroidXLifecycleScope","class AndroidXLifecycleScope(config: Config) : Rule","dispatch.detekt.rules.AndroidXLifecycleScope"]},{"name":"class HardCodedDispatcher(config: Config) : Rule","description":"dispatch.detekt.rules.HardCodedDispatcher","location":"dispatch-detekt/dispatch.detekt.rules/-hard-coded-dispatcher/index.html","searchKeys":["HardCodedDispatcher","class HardCodedDispatcher(config: Config) : Rule","dispatch.detekt.rules.HardCodedDispatcher"]},{"name":"fun AndroidXLifecycleScope(config: Config = Config.empty)","description":"dispatch.detekt.rules.AndroidXLifecycleScope.AndroidXLifecycleScope","location":"dispatch-detekt/dispatch.detekt.rules/-android-x-lifecycle-scope/-android-x-lifecycle-scope.html","searchKeys":["AndroidXLifecycleScope","fun AndroidXLifecycleScope(config: Config = Config.empty)","dispatch.detekt.rules.AndroidXLifecycleScope.AndroidXLifecycleScope"]},{"name":"fun HardCodedDispatcher(config: Config = Config.empty)","description":"dispatch.detekt.rules.HardCodedDispatcher.HardCodedDispatcher","location":"dispatch-detekt/dispatch.detekt.rules/-hard-coded-dispatcher/-hard-coded-dispatcher.html","searchKeys":["HardCodedDispatcher","fun HardCodedDispatcher(config: Config = Config.empty)","dispatch.detekt.rules.HardCodedDispatcher.HardCodedDispatcher"]},{"name":"fun <T> CoroutineScope.asyncDefault(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","description":"dispatch.core.asyncDefault","location":"dispatch-core/dispatch.core/async-default.html","searchKeys":["asyncDefault","fun <T> CoroutineScope.asyncDefault(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","dispatch.core.asyncDefault"]},{"name":"fun <T> CoroutineScope.asyncIO(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","description":"dispatch.core.asyncIO","location":"dispatch-core/dispatch.core/async-i-o.html","searchKeys":["asyncIO","fun <T> CoroutineScope.asyncIO(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","dispatch.core.asyncIO"]},{"name":"fun <T> CoroutineScope.asyncMain(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","description":"dispatch.core.asyncMain","location":"dispatch-core/dispatch.core/async-main.html","searchKeys":["asyncMain","fun <T> CoroutineScope.asyncMain(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","dispatch.core.asyncMain"]},{"name":"fun <T> CoroutineScope.asyncMainImmediate(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","description":"dispatch.core.asyncMainImmediate","location":"dispatch-core/dispatch.core/async-main-immediate.html","searchKeys":["asyncMainImmediate","fun <T> CoroutineScope.asyncMainImmediate(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","dispatch.core.asyncMainImmediate"]},{"name":"fun <T> CoroutineScope.asyncUnconfined(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","description":"dispatch.core.asyncUnconfined","location":"dispatch-core/dispatch.core/async-unconfined.html","searchKeys":["asyncUnconfined","fun <T> CoroutineScope.asyncUnconfined(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> T): Deferred<T>","dispatch.core.asyncUnconfined"]},{"name":"fun <T> Flow<T>.flowOnDefault(): Flow<T>","description":"dispatch.core.flowOnDefault","location":"dispatch-core/dispatch.core/flow-on-default.html","searchKeys":["flowOnDefault","fun <T> Flow<T>.flowOnDefault(): Flow<T>","dispatch.core.flowOnDefault"]},{"name":"fun <T> Flow<T>.flowOnIO(): Flow<T>","description":"dispatch.core.flowOnIO","location":"dispatch-core/dispatch.core/flow-on-i-o.html","searchKeys":["flowOnIO","fun <T> Flow<T>.flowOnIO(): Flow<T>","dispatch.core.flowOnIO"]},{"name":"fun <T> Flow<T>.flowOnMain(): Flow<T>","description":"dispatch.core.flowOnMain","location":"dispatch-core/dispatch.core/flow-on-main.html","searchKeys":["flowOnMain","fun <T> Flow<T>.flowOnMain(): Flow<T>","dispatch.core.flowOnMain"]},{"name":"fun <T> Flow<T>.flowOnMainImmediate(): Flow<T>","description":"dispatch.core.flowOnMainImmediate","location":"dispatch-core/dispatch.core/flow-on-main-immediate.html","searchKeys":["flowOnMainImmediate","fun <T> Flow<T>.flowOnMainImmediate(): Flow<T>","dispatch.core.flowOnMainImmediate"]},{"name":"fun <T> Flow<T>.flowOnUnconfined(): Flow<T>","description":"dispatch.core.flowOnUnconfined","location":"dispatch-core/dispatch.core/flow-on-unconfined.html","searchKeys":["flowOnUnconfined","fun <T> Flow<T>.flowOnUnconfined(): Flow<T>","dispatch.core.flowOnUnconfined"]},{"name":"fun CoroutineScope.launchDefault(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.core.launchDefault","location":"dispatch-core/dispatch.core/launch-default.html","searchKeys":["launchDefault","fun CoroutineScope.launchDefault(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","dispatch.core.launchDefault"]},{"name":"fun CoroutineScope.launchIO(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.core.launchIO","location":"dispatch-core/dispatch.core/launch-i-o.html","searchKeys":["launchIO","fun CoroutineScope.launchIO(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","dispatch.core.launchIO"]},{"name":"fun CoroutineScope.launchMain(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.core.launchMain","location":"dispatch-core/dispatch.core/launch-main.html","searchKeys":["launchMain","fun CoroutineScope.launchMain(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","dispatch.core.launchMain"]},{"name":"fun CoroutineScope.launchMainImmediate(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.core.launchMainImmediate","location":"dispatch-core/dispatch.core/launch-main-immediate.html","searchKeys":["launchMainImmediate","fun CoroutineScope.launchMainImmediate(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","dispatch.core.launchMainImmediate"]},{"name":"fun CoroutineScope.launchUnconfined(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","description":"dispatch.core.launchUnconfined","location":"dispatch-core/dispatch.core/launch-unconfined.html","searchKeys":["launchUnconfined","fun CoroutineScope.launchUnconfined(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, block: suspend CoroutineScope.() -> Unit): Job","dispatch.core.launchUnconfined"]},{"name":"fun DefaultCoroutineScope(coroutineContext: CoroutineContext): DefaultCoroutineScope","description":"dispatch.core.DefaultCoroutineScope","location":"dispatch-core/dispatch.core/-default-coroutine-scope.html","searchKeys":["DefaultCoroutineScope","fun DefaultCoroutineScope(coroutineContext: CoroutineContext): DefaultCoroutineScope","dispatch.core.DefaultCoroutineScope"]},{"name":"fun DefaultCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): DefaultCoroutineScope","description":"dispatch.core.DefaultCoroutineScope","location":"dispatch-core/dispatch.core/-default-coroutine-scope.html","searchKeys":["DefaultCoroutineScope","fun DefaultCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): DefaultCoroutineScope","dispatch.core.DefaultCoroutineScope"]},{"name":"fun DispatcherProvider(): DispatcherProvider","description":"dispatch.core.DispatcherProvider","location":"dispatch-core/dispatch.core/-dispatcher-provider.html","searchKeys":["DispatcherProvider","fun DispatcherProvider(): DispatcherProvider","dispatch.core.DispatcherProvider"]},{"name":"fun DispatcherProvider(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher): DispatcherProvider","description":"dispatch.core.DispatcherProvider","location":"dispatch-core/dispatch.core/-dispatcher-provider.html","searchKeys":["DispatcherProvider","fun DispatcherProvider(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher): DispatcherProvider","dispatch.core.DispatcherProvider"]},{"name":"fun IOCoroutineScope(coroutineContext: CoroutineContext): IOCoroutineScope","description":"dispatch.core.IOCoroutineScope","location":"dispatch-core/dispatch.core/-i-o-coroutine-scope.html","searchKeys":["IOCoroutineScope","fun IOCoroutineScope(coroutineContext: CoroutineContext): IOCoroutineScope","dispatch.core.IOCoroutineScope"]},{"name":"fun IOCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): IOCoroutineScope","description":"dispatch.core.IOCoroutineScope","location":"dispatch-core/dispatch.core/-i-o-coroutine-scope.html","searchKeys":["IOCoroutineScope","fun IOCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): IOCoroutineScope","dispatch.core.IOCoroutineScope"]},{"name":"fun MainCoroutineScope(coroutineContext: CoroutineContext): MainCoroutineScope","description":"dispatch.core.MainCoroutineScope","location":"dispatch-core/dispatch.core/-main-coroutine-scope.html","searchKeys":["MainCoroutineScope","fun MainCoroutineScope(coroutineContext: CoroutineContext): MainCoroutineScope","dispatch.core.MainCoroutineScope"]},{"name":"fun MainCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): MainCoroutineScope","description":"dispatch.core.MainCoroutineScope","location":"dispatch-core/dispatch.core/-main-coroutine-scope.html","searchKeys":["MainCoroutineScope","fun MainCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): MainCoroutineScope","dispatch.core.MainCoroutineScope"]},{"name":"fun MainImmediateCoroutineScope(coroutineContext: CoroutineContext): MainImmediateCoroutineScope","description":"dispatch.core.MainImmediateCoroutineScope","location":"dispatch-core/dispatch.core/-main-immediate-coroutine-scope.html","searchKeys":["MainImmediateCoroutineScope","fun MainImmediateCoroutineScope(coroutineContext: CoroutineContext): MainImmediateCoroutineScope","dispatch.core.MainImmediateCoroutineScope"]},{"name":"fun MainImmediateCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): MainImmediateCoroutineScope","description":"dispatch.core.MainImmediateCoroutineScope","location":"dispatch-core/dispatch.core/-main-immediate-coroutine-scope.html","searchKeys":["MainImmediateCoroutineScope","fun MainImmediateCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): MainImmediateCoroutineScope","dispatch.core.MainImmediateCoroutineScope"]},{"name":"fun UnconfinedCoroutineScope(coroutineContext: CoroutineContext): UnconfinedCoroutineScope","description":"dispatch.core.UnconfinedCoroutineScope","location":"dispatch-core/dispatch.core/-unconfined-coroutine-scope.html","searchKeys":["UnconfinedCoroutineScope","fun UnconfinedCoroutineScope(coroutineContext: CoroutineContext): UnconfinedCoroutineScope","dispatch.core.UnconfinedCoroutineScope"]},{"name":"fun UnconfinedCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): UnconfinedCoroutineScope","description":"dispatch.core.UnconfinedCoroutineScope","location":"dispatch-core/dispatch.core/-unconfined-coroutine-scope.html","searchKeys":["UnconfinedCoroutineScope","fun UnconfinedCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: DispatcherProvider = DefaultDispatcherProvider.get()): UnconfinedCoroutineScope","dispatch.core.UnconfinedCoroutineScope"]},{"name":"fun get(): DispatcherProvider","description":"dispatch.core.DefaultDispatcherProvider.get","location":"dispatch-core/dispatch.core/-default-dispatcher-provider/get.html","searchKeys":["get","fun get(): DispatcherProvider","dispatch.core.DefaultDispatcherProvider.get"]},{"name":"fun set(value: DispatcherProvider)","description":"dispatch.core.DefaultDispatcherProvider.set","location":"dispatch-core/dispatch.core/-default-dispatcher-provider/set.html","searchKeys":["set","fun set(value: DispatcherProvider)","dispatch.core.DefaultDispatcherProvider.set"]},{"name":"interface DefaultCoroutineScope : CoroutineScope","description":"dispatch.core.DefaultCoroutineScope","location":"dispatch-core/dispatch.core/-default-coroutine-scope/index.html","searchKeys":["DefaultCoroutineScope","interface DefaultCoroutineScope : CoroutineScope","dispatch.core.DefaultCoroutineScope"]},{"name":"interface DispatcherProvider : CoroutineContext.Element","description":"dispatch.core.DispatcherProvider","location":"dispatch-core/dispatch.core/-dispatcher-provider/index.html","searchKeys":["DispatcherProvider","interface DispatcherProvider : CoroutineContext.Element","dispatch.core.DispatcherProvider"]},{"name":"interface IOCoroutineScope : CoroutineScope","description":"dispatch.core.IOCoroutineScope","location":"dispatch-core/dispatch.core/-i-o-coroutine-scope/index.html","searchKeys":["IOCoroutineScope","interface IOCoroutineScope : CoroutineScope","dispatch.core.IOCoroutineScope"]},{"name":"interface MainCoroutineScope : CoroutineScope","description":"dispatch.core.MainCoroutineScope","location":"dispatch-core/dispatch.core/-main-coroutine-scope/index.html","searchKeys":["MainCoroutineScope","interface MainCoroutineScope : CoroutineScope","dispatch.core.MainCoroutineScope"]},{"name":"interface MainImmediateCoroutineScope : CoroutineScope","description":"dispatch.core.MainImmediateCoroutineScope","location":"dispatch-core/dispatch.core/-main-immediate-coroutine-scope/index.html","searchKeys":["MainImmediateCoroutineScope","interface MainImmediateCoroutineScope : CoroutineScope","dispatch.core.MainImmediateCoroutineScope"]},{"name":"interface UnconfinedCoroutineScope : CoroutineScope","description":"dispatch.core.UnconfinedCoroutineScope","location":"dispatch-core/dispatch.core/-unconfined-coroutine-scope/index.html","searchKeys":["UnconfinedCoroutineScope","interface UnconfinedCoroutineScope : CoroutineScope","dispatch.core.UnconfinedCoroutineScope"]},{"name":"object DefaultDispatcherProvider","description":"dispatch.core.DefaultDispatcherProvider","location":"dispatch-core/dispatch.core/-default-dispatcher-provider/index.html","searchKeys":["DefaultDispatcherProvider","object DefaultDispatcherProvider","dispatch.core.DefaultDispatcherProvider"]},{"name":"object Key : CoroutineContext.Key<DispatcherProvider> ","description":"dispatch.core.DispatcherProvider.Key","location":"dispatch-core/dispatch.core/-dispatcher-provider/-key/index.html","searchKeys":["Key","object Key : CoroutineContext.Key<DispatcherProvider> ","dispatch.core.DispatcherProvider.Key"]},{"name":"open fun copy(default: CoroutineDispatcher = this.default, io: CoroutineDispatcher = this.io, main: CoroutineDispatcher = this.main, mainImmediate: CoroutineDispatcher = this.mainImmediate, unconfined: CoroutineDispatcher = this.unconfined): DispatcherProvider","description":"dispatch.core.DispatcherProvider.copy","location":"dispatch-core/dispatch.core/-dispatcher-provider/copy.html","searchKeys":["copy","open fun copy(default: CoroutineDispatcher = this.default, io: CoroutineDispatcher = this.io, main: CoroutineDispatcher = this.main, mainImmediate: CoroutineDispatcher = this.mainImmediate, unconfined: CoroutineDispatcher = this.unconfined): DispatcherProvider","dispatch.core.DispatcherProvider.copy"]},{"name":"open override val key: CoroutineContext.Key<*>","description":"dispatch.core.DispatcherProvider.key","location":"dispatch-core/dispatch.core/-dispatcher-provider/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<*>","dispatch.core.DispatcherProvider.key"]},{"name":"open val default: CoroutineDispatcher","description":"dispatch.core.DispatcherProvider.default","location":"dispatch-core/dispatch.core/-dispatcher-provider/default.html","searchKeys":["default","open val default: CoroutineDispatcher","dispatch.core.DispatcherProvider.default"]},{"name":"open val io: CoroutineDispatcher","description":"dispatch.core.DispatcherProvider.io","location":"dispatch-core/dispatch.core/-dispatcher-provider/io.html","searchKeys":["io","open val io: CoroutineDispatcher","dispatch.core.DispatcherProvider.io"]},{"name":"open val main: CoroutineDispatcher","description":"dispatch.core.DispatcherProvider.main","location":"dispatch-core/dispatch.core/-dispatcher-provider/main.html","searchKeys":["main","open val main: CoroutineDispatcher","dispatch.core.DispatcherProvider.main"]},{"name":"open val mainImmediate: CoroutineDispatcher","description":"dispatch.core.DispatcherProvider.mainImmediate","location":"dispatch-core/dispatch.core/-dispatcher-provider/main-immediate.html","searchKeys":["mainImmediate","open val mainImmediate: CoroutineDispatcher","dispatch.core.DispatcherProvider.mainImmediate"]},{"name":"open val unconfined: CoroutineDispatcher","description":"dispatch.core.DispatcherProvider.unconfined","location":"dispatch-core/dispatch.core/-dispatcher-provider/unconfined.html","searchKeys":["unconfined","open val unconfined: CoroutineDispatcher","dispatch.core.DispatcherProvider.unconfined"]},{"name":"operator fun invoke(): DispatcherProvider","description":"dispatch.core.DefaultDispatcherProvider.invoke","location":"dispatch-core/dispatch.core/-default-dispatcher-provider/invoke.html","searchKeys":["invoke","operator fun invoke(): DispatcherProvider","dispatch.core.DefaultDispatcherProvider.invoke"]},{"name":"suspend fun <T> withDefault(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","description":"dispatch.core.withDefault","location":"dispatch-core/dispatch.core/with-default.html","searchKeys":["withDefault","suspend fun <T> withDefault(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","dispatch.core.withDefault"]},{"name":"suspend fun <T> withIO(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","description":"dispatch.core.withIO","location":"dispatch-core/dispatch.core/with-i-o.html","searchKeys":["withIO","suspend fun <T> withIO(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","dispatch.core.withIO"]},{"name":"suspend fun <T> withMain(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","description":"dispatch.core.withMain","location":"dispatch-core/dispatch.core/with-main.html","searchKeys":["withMain","suspend fun <T> withMain(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","dispatch.core.withMain"]},{"name":"suspend fun <T> withMainImmediate(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","description":"dispatch.core.withMainImmediate","location":"dispatch-core/dispatch.core/with-main-immediate.html","searchKeys":["withMainImmediate","suspend fun <T> withMainImmediate(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","dispatch.core.withMainImmediate"]},{"name":"suspend fun <T> withUnconfined(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","description":"dispatch.core.withUnconfined","location":"dispatch-core/dispatch.core/with-unconfined.html","searchKeys":["withUnconfined","suspend fun <T> withUnconfined(context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): T","dispatch.core.withUnconfined"]},{"name":"val CoroutineContext.dispatcherProvider: DispatcherProvider","description":"dispatch.core.dispatcherProvider","location":"dispatch-core/dispatch.core/dispatcher-provider.html","searchKeys":["dispatcherProvider","val CoroutineContext.dispatcherProvider: DispatcherProvider","dispatch.core.dispatcherProvider"]},{"name":"val CoroutineScope.defaultDispatcher: CoroutineDispatcher","description":"dispatch.core.defaultDispatcher","location":"dispatch-core/dispatch.core/default-dispatcher.html","searchKeys":["defaultDispatcher","val CoroutineScope.defaultDispatcher: CoroutineDispatcher","dispatch.core.defaultDispatcher"]},{"name":"val CoroutineScope.dispatcherProvider: DispatcherProvider","description":"dispatch.core.dispatcherProvider","location":"dispatch-core/dispatch.core/dispatcher-provider.html","searchKeys":["dispatcherProvider","val CoroutineScope.dispatcherProvider: DispatcherProvider","dispatch.core.dispatcherProvider"]},{"name":"val CoroutineScope.ioDispatcher: CoroutineDispatcher","description":"dispatch.core.ioDispatcher","location":"dispatch-core/dispatch.core/io-dispatcher.html","searchKeys":["ioDispatcher","val CoroutineScope.ioDispatcher: CoroutineDispatcher","dispatch.core.ioDispatcher"]},{"name":"val CoroutineScope.mainDispatcher: CoroutineDispatcher","description":"dispatch.core.mainDispatcher","location":"dispatch-core/dispatch.core/main-dispatcher.html","searchKeys":["mainDispatcher","val CoroutineScope.mainDispatcher: CoroutineDispatcher","dispatch.core.mainDispatcher"]},{"name":"val CoroutineScope.mainImmediateDispatcher: CoroutineDispatcher","description":"dispatch.core.mainImmediateDispatcher","location":"dispatch-core/dispatch.core/main-immediate-dispatcher.html","searchKeys":["mainImmediateDispatcher","val CoroutineScope.mainImmediateDispatcher: CoroutineDispatcher","dispatch.core.mainImmediateDispatcher"]},{"name":"val CoroutineScope.unconfinedDispatcher: CoroutineDispatcher","description":"dispatch.core.unconfinedDispatcher","location":"dispatch-core/dispatch.core/unconfined-dispatcher.html","searchKeys":["unconfinedDispatcher","val CoroutineScope.unconfinedDispatcher: CoroutineDispatcher","dispatch.core.unconfinedDispatcher"]},{"name":"abstract val idlingDispatcherProvider: IdlingDispatcherProvider","description":"dispatch.android.espresso.IdlingCoroutineScope.idlingDispatcherProvider","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-coroutine-scope/idling-dispatcher-provider.html","searchKeys":["idlingDispatcherProvider","abstract val idlingDispatcherProvider: IdlingDispatcherProvider","dispatch.android.espresso.IdlingCoroutineScope.idlingDispatcherProvider"]},{"name":"class IdlingDispatcher(delegate: CoroutineDispatcher) : CoroutineDispatcher","description":"dispatch.android.espresso.IdlingDispatcher","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher/index.html","searchKeys":["IdlingDispatcher","class IdlingDispatcher(delegate: CoroutineDispatcher) : CoroutineDispatcher","dispatch.android.espresso.IdlingDispatcher"]},{"name":"class IdlingDispatcherProvider(default: IdlingDispatcher, io: IdlingDispatcher, main: IdlingDispatcher, mainImmediate: IdlingDispatcher, unconfined: IdlingDispatcher) : DispatcherProvider","description":"dispatch.android.espresso.IdlingDispatcherProvider","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/index.html","searchKeys":["IdlingDispatcherProvider","class IdlingDispatcherProvider(default: IdlingDispatcher, io: IdlingDispatcher, main: IdlingDispatcher, mainImmediate: IdlingDispatcher, unconfined: IdlingDispatcher) : DispatcherProvider","dispatch.android.espresso.IdlingDispatcherProvider"]},{"name":"class IdlingDispatcherProviderRule(factory: () -> IdlingDispatcherProvider) : TestWatcher","description":"dispatch.android.espresso.IdlingDispatcherProviderRule","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider-rule/index.html","searchKeys":["IdlingDispatcherProviderRule","class IdlingDispatcherProviderRule(factory: () -> IdlingDispatcherProvider) : TestWatcher","dispatch.android.espresso.IdlingDispatcherProviderRule"]},{"name":"fun DefaultIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): DefaultIdlingCoroutineScope","description":"dispatch.android.espresso.DefaultIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-default-idling-coroutine-scope.html","searchKeys":["DefaultIdlingCoroutineScope","fun DefaultIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): DefaultIdlingCoroutineScope","dispatch.android.espresso.DefaultIdlingCoroutineScope"]},{"name":"fun IOIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): IOIdlingCoroutineScope","description":"dispatch.android.espresso.IOIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-i-o-idling-coroutine-scope.html","searchKeys":["IOIdlingCoroutineScope","fun IOIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): IOIdlingCoroutineScope","dispatch.android.espresso.IOIdlingCoroutineScope"]},{"name":"fun IdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): IdlingCoroutineScope","description":"dispatch.android.espresso.IdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-coroutine-scope.html","searchKeys":["IdlingCoroutineScope","fun IdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): IdlingCoroutineScope","dispatch.android.espresso.IdlingCoroutineScope"]},{"name":"fun IdlingDispatcher(delegate: CoroutineDispatcher)","description":"dispatch.android.espresso.IdlingDispatcher.IdlingDispatcher","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher/-idling-dispatcher.html","searchKeys":["IdlingDispatcher","fun IdlingDispatcher(delegate: CoroutineDispatcher)","dispatch.android.espresso.IdlingDispatcher.IdlingDispatcher"]},{"name":"fun IdlingDispatcherProvider(default: IdlingDispatcher, io: IdlingDispatcher, main: IdlingDispatcher, mainImmediate: IdlingDispatcher, unconfined: IdlingDispatcher)","description":"dispatch.android.espresso.IdlingDispatcherProvider.IdlingDispatcherProvider","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/-idling-dispatcher-provider.html","searchKeys":["IdlingDispatcherProvider","fun IdlingDispatcherProvider(default: IdlingDispatcher, io: IdlingDispatcher, main: IdlingDispatcher, mainImmediate: IdlingDispatcher, unconfined: IdlingDispatcher)","dispatch.android.espresso.IdlingDispatcherProvider.IdlingDispatcherProvider"]},{"name":"fun IdlingDispatcherProvider(delegate: DispatcherProvider = DefaultDispatcherProvider.get()): IdlingDispatcherProvider","description":"dispatch.android.espresso.IdlingDispatcherProvider","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider.html","searchKeys":["IdlingDispatcherProvider","fun IdlingDispatcherProvider(delegate: DispatcherProvider = DefaultDispatcherProvider.get()): IdlingDispatcherProvider","dispatch.android.espresso.IdlingDispatcherProvider"]},{"name":"fun IdlingDispatcherProvider.registerAllIdlingResources()","description":"dispatch.android.espresso.registerAllIdlingResources","location":"dispatch-android-espresso/dispatch.android.espresso/register-all-idling-resources.html","searchKeys":["registerAllIdlingResources","fun IdlingDispatcherProvider.registerAllIdlingResources()","dispatch.android.espresso.registerAllIdlingResources"]},{"name":"fun IdlingDispatcherProvider.unregisterAllIdlingResources()","description":"dispatch.android.espresso.unregisterAllIdlingResources","location":"dispatch-android-espresso/dispatch.android.espresso/unregister-all-idling-resources.html","searchKeys":["unregisterAllIdlingResources","fun IdlingDispatcherProvider.unregisterAllIdlingResources()","dispatch.android.espresso.unregisterAllIdlingResources"]},{"name":"fun IdlingDispatcherProviderRule(factory: () -> IdlingDispatcherProvider)","description":"dispatch.android.espresso.IdlingDispatcherProviderRule.IdlingDispatcherProviderRule","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider-rule/-idling-dispatcher-provider-rule.html","searchKeys":["IdlingDispatcherProviderRule","fun IdlingDispatcherProviderRule(factory: () -> IdlingDispatcherProvider)","dispatch.android.espresso.IdlingDispatcherProviderRule.IdlingDispatcherProviderRule"]},{"name":"fun MainIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): MainIdlingCoroutineScope","description":"dispatch.android.espresso.MainIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-main-idling-coroutine-scope.html","searchKeys":["MainIdlingCoroutineScope","fun MainIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): MainIdlingCoroutineScope","dispatch.android.espresso.MainIdlingCoroutineScope"]},{"name":"fun MainImmediateIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): MainImmediateIdlingCoroutineScope","description":"dispatch.android.espresso.MainImmediateIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-main-immediate-idling-coroutine-scope.html","searchKeys":["MainImmediateIdlingCoroutineScope","fun MainImmediateIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): MainImmediateIdlingCoroutineScope","dispatch.android.espresso.MainImmediateIdlingCoroutineScope"]},{"name":"fun UnconfinedIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): UnconfinedIdlingCoroutineScope","description":"dispatch.android.espresso.UnconfinedIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-unconfined-idling-coroutine-scope.html","searchKeys":["UnconfinedIdlingCoroutineScope","fun UnconfinedIdlingCoroutineScope(job: Job = SupervisorJob(), dispatcherProvider: IdlingDispatcherProvider = IdlingDispatcherProvider()): UnconfinedIdlingCoroutineScope","dispatch.android.espresso.UnconfinedIdlingCoroutineScope"]},{"name":"fun isIdle(): Boolean","description":"dispatch.android.espresso.IdlingDispatcher.isIdle","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher/is-idle.html","searchKeys":["isIdle","fun isIdle(): Boolean","dispatch.android.espresso.IdlingDispatcher.isIdle"]},{"name":"interface DefaultIdlingCoroutineScope : IdlingCoroutineScope, DefaultCoroutineScope","description":"dispatch.android.espresso.DefaultIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-default-idling-coroutine-scope/index.html","searchKeys":["DefaultIdlingCoroutineScope","interface DefaultIdlingCoroutineScope : IdlingCoroutineScope, DefaultCoroutineScope","dispatch.android.espresso.DefaultIdlingCoroutineScope"]},{"name":"interface IOIdlingCoroutineScope : IdlingCoroutineScope, IOCoroutineScope","description":"dispatch.android.espresso.IOIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-i-o-idling-coroutine-scope/index.html","searchKeys":["IOIdlingCoroutineScope","interface IOIdlingCoroutineScope : IdlingCoroutineScope, IOCoroutineScope","dispatch.android.espresso.IOIdlingCoroutineScope"]},{"name":"interface IdlingCoroutineScope : CoroutineScope","description":"dispatch.android.espresso.IdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-coroutine-scope/index.html","searchKeys":["IdlingCoroutineScope","interface IdlingCoroutineScope : CoroutineScope","dispatch.android.espresso.IdlingCoroutineScope"]},{"name":"interface MainIdlingCoroutineScope : IdlingCoroutineScope, MainCoroutineScope","description":"dispatch.android.espresso.MainIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-main-idling-coroutine-scope/index.html","searchKeys":["MainIdlingCoroutineScope","interface MainIdlingCoroutineScope : IdlingCoroutineScope, MainCoroutineScope","dispatch.android.espresso.MainIdlingCoroutineScope"]},{"name":"interface MainImmediateIdlingCoroutineScope : IdlingCoroutineScope, MainImmediateCoroutineScope","description":"dispatch.android.espresso.MainImmediateIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-main-immediate-idling-coroutine-scope/index.html","searchKeys":["MainImmediateIdlingCoroutineScope","interface MainImmediateIdlingCoroutineScope : IdlingCoroutineScope, MainImmediateCoroutineScope","dispatch.android.espresso.MainImmediateIdlingCoroutineScope"]},{"name":"interface UnconfinedIdlingCoroutineScope : IdlingCoroutineScope, UnconfinedCoroutineScope","description":"dispatch.android.espresso.UnconfinedIdlingCoroutineScope","location":"dispatch-android-espresso/dispatch.android.espresso/-unconfined-idling-coroutine-scope/index.html","searchKeys":["UnconfinedIdlingCoroutineScope","interface UnconfinedIdlingCoroutineScope : IdlingCoroutineScope, UnconfinedCoroutineScope","dispatch.android.espresso.UnconfinedIdlingCoroutineScope"]},{"name":"lateinit var dispatcherProvider: IdlingDispatcherProvider","description":"dispatch.android.espresso.IdlingDispatcherProviderRule.dispatcherProvider","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider-rule/dispatcher-provider.html","searchKeys":["dispatcherProvider","lateinit var dispatcherProvider: IdlingDispatcherProvider","dispatch.android.espresso.IdlingDispatcherProviderRule.dispatcherProvider"]},{"name":"open override fun copy(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher): IdlingDispatcherProvider","description":"dispatch.android.espresso.IdlingDispatcherProvider.copy","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/copy.html","searchKeys":["copy","open override fun copy(default: CoroutineDispatcher, io: CoroutineDispatcher, main: CoroutineDispatcher, mainImmediate: CoroutineDispatcher, unconfined: CoroutineDispatcher): IdlingDispatcherProvider","dispatch.android.espresso.IdlingDispatcherProvider.copy"]},{"name":"open override fun dispatch(context: CoroutineContext, block: Runnable)","description":"dispatch.android.espresso.IdlingDispatcher.dispatch","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher/dispatch.html","searchKeys":["dispatch","open override fun dispatch(context: CoroutineContext, block: Runnable)","dispatch.android.espresso.IdlingDispatcher.dispatch"]},{"name":"open override val default: IdlingDispatcher","description":"dispatch.android.espresso.IdlingDispatcherProvider.default","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/default.html","searchKeys":["default","open override val default: IdlingDispatcher","dispatch.android.espresso.IdlingDispatcherProvider.default"]},{"name":"open override val io: IdlingDispatcher","description":"dispatch.android.espresso.IdlingDispatcherProvider.io","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/io.html","searchKeys":["io","open override val io: IdlingDispatcher","dispatch.android.espresso.IdlingDispatcherProvider.io"]},{"name":"open override val main: IdlingDispatcher","description":"dispatch.android.espresso.IdlingDispatcherProvider.main","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/main.html","searchKeys":["main","open override val main: IdlingDispatcher","dispatch.android.espresso.IdlingDispatcherProvider.main"]},{"name":"open override val mainImmediate: IdlingDispatcher","description":"dispatch.android.espresso.IdlingDispatcherProvider.mainImmediate","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/main-immediate.html","searchKeys":["mainImmediate","open override val mainImmediate: IdlingDispatcher","dispatch.android.espresso.IdlingDispatcherProvider.mainImmediate"]},{"name":"open override val unconfined: IdlingDispatcher","description":"dispatch.android.espresso.IdlingDispatcherProvider.unconfined","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher-provider/unconfined.html","searchKeys":["unconfined","open override val unconfined: IdlingDispatcher","dispatch.android.espresso.IdlingDispatcherProvider.unconfined"]},{"name":"val counter: CountingIdlingResource","description":"dispatch.android.espresso.IdlingDispatcher.counter","location":"dispatch-android-espresso/dispatch.android.espresso/-idling-dispatcher/counter.html","searchKeys":["counter","val counter: CountingIdlingResource","dispatch.android.espresso.IdlingDispatcher.counter"]}]