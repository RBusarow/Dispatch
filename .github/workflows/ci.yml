name: CI

on:
  pull_request:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # every day at 10pm CST (4 UTC)
    - cron: '0 4 * * *'

jobs:

  cancel-other-jobs:

    runs-on: ubuntu-latest

    steps:
      # cancel previous jobs
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        env:
          access_token: '${{ github.token }}'

  detekt:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: detekt
        run: ./gradlew detekt --no-daemon

  ktlint:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'

    steps:
      - name: check out with token (used by forks)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name != github.repository

      - name: check out with PAT (used by main repo)
        uses: actions/checkout@v3
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: KtLint format (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: ./gradlew ktlintformat -q --no-daemon

      # If KtLint generated changes, commit and push those changes.
      - name: commit changes (used by main repo)
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply KtLint format
          commit_options: '--no-verify --signoff'

      - name: KtLint check (used by forks)
        if: github.event.pull_request.head.repo.full_name != github.repository
        run: ./gradlew ktlintCheck -q --no-daemon

#  versioning:
#
#    runs-on: ubuntu-latest
  #    if: github.actor != 'renovate[bot]'
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          ref: ${{ github.event.pull_request.head.ref }}
#          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
#          fetch-depth: 0
#
#      - name: Set up JDK
#        uses : actions/setup-java@v2
#        with :
#          distribution : 'adopt'
#          java-version : '14'
#          cache: 'gradle'
#
#      - uses: burrunan/gradle-cache-action@v1
#        name: Sync versions in website docs
#        with:
#          gradle-dependencies-cache-key: |
#            gradle/libs.versions.toml
#          arguments: |
#            updateWebsiteNextDocsVersionRefs
#          concurrent: true
#          gradle-build-scan-report: false
#          gradle-distribution-sha-256-sum-warning: false
#
#      - name: commit changes
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: update docs versions
#          commit_options: '--no-verify --signoff'
#
#      - uses: burrunan/gradle-cache-action@v1
#        name: Update version in website package.json
#        with:
#          gradle-dependencies-cache-key: |
#            gradle/libs.versions.toml
#          arguments: |
#            updateWebsitePackageJsonVersion
#          concurrent: true
#          gradle-build-scan-report: false
#          gradle-distribution-sha-256-sum-warning: false
#
#      - name: commit changes
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: update website versions
#          commit_options: '--no-verify --signoff'

  api-check:

    runs-on: ubuntu-latest
    if: github.actor != 'renovate[bot]'

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: api check
        run: ./gradlew apicheck --no-daemon

  dependency-guard:

    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: dependency-guard
        run: ./gradlew dependencyGuard --no-daemon --refresh-dependencies

  tests:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: all tests
        run: ./gradlew testJvm --no-daemon

      - name: Archive test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results-ubuntu
          path: ./**/build/reports/tests/

      - name: Unit test results
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - Ubuntu
